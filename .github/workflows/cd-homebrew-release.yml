name: Homebrew Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag WITH v prefix (e.g., v1.2.3, NOT 1.2.3)'
        required: true
        type: string
  workflow_call:
    inputs:
      tag_name:
        description: 'Release tag WITH v prefix (e.g., v1.2.3, NOT 1.2.3)'
        required: true
        type: string

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  cd-homebrew-release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      # Unified input handling for both workflow_dispatch and workflow_call
      TAG_NAME: ${{ github.event.inputs.tag_name || inputs.tag_name }}
    steps:
      - name: Generate GitHub App Token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: |
            ai-chat-md-export
            homebrew-tap

      - name: Validate tag has v prefix
        run: |
          if [[ ! "${{ env.TAG_NAME }}" =~ ^v ]]; then
            echo "Error: Tag name must start with 'v' prefix (e.g., v1.2.3)"
            echo "Received: ${{ env.TAG_NAME }}"
            exit 1
          fi
          echo "Tag format validated: ${{ env.TAG_NAME }}"

      - name: Validate tag format
        id: validate_tag
        uses: matt-usurp/validate-semver@v2
        with:
          version: ${{ env.TAG_NAME }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ env.TAG_NAME || github.ref }}

      - name: Check if tag exists
        id: check_tag
        uses: mukunku/tag-exists-action@v1.6.0
        with:
          tag: v${{ steps.validate_tag.outputs.version }}

      - name: Fail if tag not found
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          echo "Error: Tag v${{ steps.validate_tag.outputs.version }} does not exist"
          exit 1

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: false  # Disable Go module caching since this is not a Go project

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          args: release --clean
        env:
          # Use GitHub App token instead of default GITHUB_TOKEN for cross-repo access
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
          HOMEBREW_TAP_PUSH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: goreleaser-artifacts
          path: dist/
