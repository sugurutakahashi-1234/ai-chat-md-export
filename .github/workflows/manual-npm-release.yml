# .github/workflows/release-manual.yml
# Manual release workflow using release-it
# Triggered manually via GitHub Actions UI
# Creates: Git tag, GitHub release, npm package
name: manual-npm-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (major, minor, patch, or specific version)'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      custom_version:
        description: 'Custom version WITHOUT v prefix (e.g., 1.2.3, NOT v1.2.3)'
        required: false
        type: string

permissions:
  contents: write
  id-token: write

jobs:
  manual-npm-release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js (for npm publish via release-it)
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run CI checks
        run: bun run ci

      - name: Build
        run: bun run build

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Validate custom version
        if: github.event.inputs.custom_version != ''
        id: validate_version
        uses: matt-usurp/validate-semver@v2
        with:
          version: ${{ github.event.inputs.custom_version }}

      - name: Get current version
        id: current_version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Compare versions
        if: github.event.inputs.custom_version != ''
        uses: madhead/semver-utils@v4
        id: version_compare
        with:
          version: ${{ steps.validate_version.outputs.version }}
          compare-to: ${{ steps.current_version.outputs.version }}

      - name: Verify version increase
        if: github.event.inputs.custom_version != '' && steps.version_compare.outputs.comparison-result != '>'
        run: |
          echo "Error: New version (${{ steps.validate_version.outputs.version }}) must be greater than current version (${{ steps.current_version.outputs.version }})"
          exit 1

      - name: Set release version
        id: set_version
        run: |
          if [[ -n "${{ github.event.inputs.custom_version }}" ]]; then
            echo "VERSION=${{ steps.validate_version.outputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Run release-it
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          bun run release -- ${{ steps.set_version.outputs.VERSION }} --ci --no-hooks

      - name: Trigger Homebrew Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0)
          echo "üç∫ Triggering Homebrew release for tag $TAG_NAME"
          gh workflow run cd-homebrew-release.yml \
            -f tag_name=$TAG_NAME
