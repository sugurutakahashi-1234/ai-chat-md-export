name: test-goreleaser-build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  goreleaser-test:
    name: Test GoReleaser Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run GoReleaser (snapshot)
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          args: build --snapshot --clean --skip=validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: goreleaser-test-artifacts
          path: |
            dist/
            !dist/**/*.tar.gz
            !dist/**/*.zip

  test-binaries:
    name: Test Binary on ${{ matrix.os }}
    needs: goreleaser-test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: goreleaser-test-artifacts
          path: dist

      - name: Test binary
        run: |
          # Find the binary
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            BINARY=$(find dist -name "ai-chat-md-export.exe" -type f | head -1)
          else
            BINARY=$(find dist -name "ai-chat-md-export" -type f ! -name "*.exe" | head -1)
            chmod +x $BINARY
          fi
          
          echo "ðŸ“¦ Testing binary: $BINARY"
          
          # Test version
          $BINARY --version
          
          # Test help
          $BINARY --help
        shell: bash