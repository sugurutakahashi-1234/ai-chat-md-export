{
  "name": "ai-chat-md-export",
  "version": "0.8.4",
  "description": "CLI tool to convert ChatGPT and Claude chat history to Markdown",
  "publishConfig": {
    "access": "public"
  },
  "keywords": [
    "chatgpt",
    "claude",
    "ai",
    "chat",
    "export",
    "markdown",
    "cli",
    "converter",
    "history",
    "conversations"
  ],
  "author": "Suguru Takahashi",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/sugurutakahashi-1234/ai-chat-md-export.git"
  },
  "bugs": {
    "url": "https://github.com/sugurutakahashi-1234/ai-chat-md-export/issues"
  },
  "homepage": "https://github.com/sugurutakahashi-1234/ai-chat-md-export#readme",
  "type": "module",
  "engines": {
    "node": ">=24.0.0"
  },
  "bin": {
    "ai-chat-md-export": "bin/ai-chat-md-export.js"
  },
  "main": "./lib/presentation/index.js",
  "types": "./lib/presentation/index.d.ts",
  "exports": {
    ".": {
      "types": "./lib/presentation/index.d.ts",
      "default": "./lib/presentation/index.js"
    }
  },
  "files": [
    "bin",
    "lib",
    "LICENSE",
    "README.md",
    "CHANGELOG.md"
  ],
  "scripts": {
    "prepare": "husky",
    "help": "bun run bin/ai-chat-md-export.js -h",
    "typecheck": "tsc --noEmit -p tsconfig.json",
    "build": "bun run build:npm",
    "build:npm": "tsc -p tsconfig.build.json",
    "build:binary": "goreleaser build --snapshot --clean --skip=validate && rm -f .*.bun-build",
    "lint": "biome check --write .",
    "lint:unsafe": "biome check --write --unsafe .",
    "lint:check": "biome check .",
    "format": "biome format --write .",
    "format:check": "biome format .",
    "test": "bun test",
    "test:quiet": "bun test > /dev/null 2>&1 && echo '✅ All tests passed' || echo '❌ Tests failed - run \"bun run test\" for details'",
    "test:e2e:npm": "bun run build:npm && bun scripts/test-npm-package.js",
    "test:e2e:binary": "bun run build:binary && bun scripts/test-binary.js",
    "test:all": "bun run test && bun run test:e2e:npm && bun run test:e2e:binary",
    "test:coverage": "bun test --coverage",
    "test:coverage:html": "bun test --coverage && bunx @lcov-viewer/cli lcov coverage/lcov.info -o coverage/html",
    "validate:codecov": "cat codecov.yml | curl --data-binary @- https://codecov.io/validate",
    "validate:renovate": "$(which npx) --yes --package renovate -- renovate-config-validator renovate.json5 --strict",
    "validate:goreleaser": "goreleaser check",
    "validate:branch": "git-branch-lint",
    "deps:check": "bunx ncu --deep",
    "deps:update": "bunx ncu -u --deep && bun install",
    "deps:size": "du -sk node_modules/* node_modules/@*/* 2>/dev/null | sort -nr | head -30 | awk 'BEGIN{print \"Package                                        Size    Visual\"} {kb=$1; path=$2; gsub(/node_modules\\//, \"\", path); if(kb>1024) {mb=kb/1024; size=sprintf(\"%.1fM\", mb)} else {size=sprintf(\"%dK\", kb)} printf \"%-45s %7s  \", path, size; bar_len=int(kb/1000); if(bar_len<1) bar_len=1; if(bar_len>40) bar_len=40; for(i=0; i<bar_len; i++) printf \"█\"; print \"\"}' && echo && echo \"Total: $(du -sh node_modules 2>/dev/null | awk '{print $1}')\"",
    "knip": "knip -c knip.config.ts",
    "knip:fix": "knip -c knip.config.ts --fix",
    "update:docs:knip": "knip -c knip.config.ts --reporter markdown > docs/reports/code-quality/unused-code.md",
    "update:docs:deps-graph:prod": "tsg --tsconfig tsconfig.build.json --LR --md docs/reports/dependencies/prod.md",
    "update:docs:deps-graph:test": "tsg --tsconfig tsconfig.json --LR --md docs/reports/dependencies/with-tests.md",
    "update:docs:deps-graph:layers": "tsg --tsconfig tsconfig.build.json --LR --abstraction src/domain --abstraction src/application --abstraction src/infrastructure --abstraction src/presentation --md docs/reports/dependencies/layers.md",
    "update:docs:deps-graph:flow": "tsg --tsconfig tsconfig.build.json --LR --include src/presentation/cli.ts --include src/presentation/processor-factory.ts --include src/application/processor.ts --exclude src/domain --exclude node_modules --md docs/reports/dependencies/flow.md",
    "update:docs:deps-graph:external": "tsg --tsconfig tsconfig.json --LR --include node_modules --md docs/reports/dependencies/external.md",
    "update:docs:deps-graph:all": "bun run update:docs:deps-graph:prod && bun run update:docs:deps-graph:test && bun run update:docs:deps-graph:layers && bun run update:docs:deps-graph:flow && bun run update:docs:deps-graph:external",
    "update:docs:all": "bun run update:docs:knip && bun run update:docs:deps-graph:all",
    "ci": "bun run lint && bun run format && bun run typecheck && bun run lint:check && bun run format:check && bun run build && bun run knip && bun run test:quiet && bun run update:docs:all",
    "clean": "rm -rf bun.lock node_modules releases dist coverage .*.bun-build tsconfig.tsbuildinfo output/chatgpt/*.md output/claude/*.md",
    "clean:install": "bun run clean && bun install",
    "clean:build": "bun run clean:install && bun run ci",
    "release:it:patch": "release-it patch --ci",
    "release:it:minor": "release-it minor --ci",
    "release:it:major": "release-it major --ci",
    "release:it:dry-run": "release-it --dry-run",
    "release:please:dry-run": "bunx release-please release-pr --token=$(gh auth token) --repo-url=sugurutakahashi-1234/ai-chat-md-export --debug --dry-run",
    "trigger:workflow:cd-homebrew-release": "gh workflow run cd-homebrew-release.yml -f tag_name=v$(jq -r .version package.json)",
    "example:chatgpt": "rm -rf sandbox/chatgpt/output && bun bin/ai-chat-md-export.js -i sandbox/chatgpt/chatgpt-conversations.json -o sandbox/chatgpt/output -p chatgpt",
    "example:claude": "rm -rf sandbox/claude/output && bun bin/ai-chat-md-export.js -i sandbox/claude/claude-conversations.json -o sandbox/claude/output -p claude",
    "example:all": "bun run example:chatgpt && bun run example:claude"
  },
  "dependencies": {
    "commander": "14.0.0",
    "ora": "8.2.0",
    "picocolors": "1.1.1",
    "zod": "4.0.5"
  },
  "devDependencies": {
    "@biomejs/biome": "2.0.6",
    "@commitlint/cli": "19.8.1",
    "@commitlint/config-conventional": "19.8.1",
    "@commitlint/types": "19.8.1",
    "@elsikora/git-branch-lint": "1.1.2",
    "@release-it/bumper": "7.0.5",
    "@release-it/conventional-changelog": "10.0.1",
    "@types/bun": "1.2.19",
    "@types/node": "24.0.15",
    "@ysk8hori/typescript-graph": "0.26.3",
    "husky": "9.1.7",
    "knip": "5.62.0",
    "release-it": "19.0.4",
    "typescript": "5.8.3"
  }
}
